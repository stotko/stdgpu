/*
 *  Copyright 2019 Patrick Stotko
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

#ifndef STDGPU_UNORDEREDMAP_FWD
#define STDGPU_UNORDEREDMAP_FWD

/**
 * \addtogroup unordered_map unordered_map
 * \ingroup data_structures
 * @{
 */

/**
 * \file stdgpu/unordered_map_fwd
 */

#include <thrust/functional.h>



namespace stdgpu
{

template <typename Key>
struct hash;


template <typename Key,
          typename T,
          typename Hash = hash<Key>,
          typename KeyEqual = thrust::equal_to<Key>>
class unordered_map;

} // namespace stdgpu



/**
 * @}
 */



#endif // STDGPU_UNORDEREDMAP_FWD
